#falta deploy, ver evento de pr, jobs paralelos, ver que test dejo o agrego

name: Pipeline de prueba

on:
  pull_request:
    branches: [ "main" ]

jobs:
  Linter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with: 
        node-version: 18
    - name: Instalar dependencias
      run: npm install
    - name: Lint
      run: npm run lint


  Test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with: 
        node-version: 18
    - name: Instalar dependencias
      run: npm install
    - name: Test unitario
      run: npm run test

    - name: Notificar fallo de test unitario
      if: failure()  
      uses: slackapi/slack-github-action@v2.1.0
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: "El test unitario ha fallado :x: en el repositorio ${{ github.repository }} en la rama ${{ github.ref }} por ${{ github.actor }}."



  Deploy:
    needs: [Linter, Test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with: 
        node-version: 18
    - name: instalar dependencias
      run: npm install
    - name: deploy
      run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

    - name: Notificar exito de deploy
      if: success()  
      uses: slackapi/slack-github-action@v2.1.0
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: "El deploy ha sido exitoso :white_check_mark: en el repositorio ${{ github.repository }} en la rama ${{ github.ref }} por ${{ github.actor }}."
      
    - name: Notificar fallo de deploy
      if: failure()  
      uses: slackapi/slack-github-action@v2.1.0
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: "El deploy ha fallado :x: en el repositorio ${{ github.repository }} en la rama ${{ github.ref }} por ${{ github.actor }}."

#agregar esperar el deploy
      
  E2E_Test:
    needs: [Deploy]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with: 
        node-version: 18
    - name: Instalar dependencias
      run: npm install
    - name: Test de Cypress en modo headless #sin interfaz grafica, npx wait-on https://continuous-integration-rbne.onrender.com 
      run: |
        npm run cypress:run

    - name: Notificar exito de test e2e
      if: success()  
      uses: slackapi/slack-github-action@v2.1.0
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: "El test e2e ha sido exitoso :white_check_mark: en el repositorio ${{ github.repository }} en la rama ${{ github.ref }} por ${{ github.actor }}."

    - name: Notificar fallo de test e2e
      if: failure()  
      uses: slackapi/slack-github-action@v2.1.0
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: "El test e2e ha fallado :x: en el repositorio ${{ github.repository }} en la rama ${{ github.ref }} por ${{ github.actor }}."